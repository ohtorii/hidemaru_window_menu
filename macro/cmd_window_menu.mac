/*秀丸エディタのウインドウ系メニュー


# 連絡先
https://github.com/ohtorii/everything	<br>
http://d.hatena.ne.jp/ohtorii/			<br>
https://twitter.com/ohtorii				<br>
*/

#K_SHIFT	= 0x10;


call Initialize;
call Main;
endmacro;


Initialize:
	#num=0;

	
	{
	/*	$root[#num]="New";
		$label[#num]="New";
		#num=#num+1;
		$root[#num]="Open";
		$label[#num]="Open";
		#num=#num+1;*/
	
		/*$root[#num]="Write";
		$label[#num]="Write";
		#num=#num+1;
		$root[#num]="Write Close";
		$label[#num]="WriteClose";
		#num=#num+1;
	*/
	}
//-------------------------------------------------
	//	移動
	//-------------------------------------------------
	$root[#num]="I)タブに移動";
	$label[#num]="ForcusTab";
	#num=#num+1;
	$root[#num]="H)左のタブに移動";
	$label[#num]="MoveLeftTab";
	#num=#num+1;
	$root[#num]="L)右のタブに移動";
	$label[#num]="MoveRightTab";
	#num=#num+1;

	$root[#num]="\x01";
	#num=#num+1;

	//-------------------------------------------------
	//	フォーカス
	//-------------------------------------------------
	/*$root[#num]="S)分割方向の切り替え";
	$label[#num]="Split";
	#num=#num+1;*/
	
	$root[#num]="S)水平分割";
	$label[#num]="SplitHorizontal";
	#num=#num+1;
	
	$root[#num]="V)垂直分割";
	$label[#num]="SplitVertical";
	#num=#num+1;
	
	$root[#num]="W)分割ウインドウ切り替え";
	$label[#num]="SplitSwitch";
	#num=#num+1;
	
	$root[#num]="C)分割ウインドウクローズ";
	$label[#num]="SplitClose";
	#num=#num+1;

	$root[#num]="\x01";
	#num=#num+1;
	
	

	//-------------------------------------------------
	//	分離
	//-------------------------------------------------
	$root[#num]="D)このタブを分離/移動";
	$label[#num]="DetachOrMoveTab";
	#num=#num+1;
	$root[#num]="このタブを分離";
	$label[#num]="DetachTab";
	#num=#num+1;
	$root[#num]="//タブをプロジェクトフォルダ毎にまとめる";
	$label[#num]="GroupingProject";
	#num=#num+1;
	$root[#num]="タブをフォルダ毎にまとめる";
	$label[#num]="GroupingFolder";
	#num=#num+1;
	$root[#num]="タブをファイル名毎にまとめる";
	$label[#num]="GroupingBasename";
	#num=#num+1;
	$root[#num]="タブを拡張子毎にまとめる";
	$label[#num]="GroupingExtension";
	#num=#num+1;

	$root[#num]="\x01";
	$label[#num]="";
	#num=#num+1;
	//-------------------------------------------------
	//	並び替え
	//-------------------------------------------------
	$root[#num]="O)タブを移動";
	$label[#num]="MoveTabBoth";
	#num=#num+1;
	$root[#num]="K)タブを右に移動";
	$label[#num]="MoveTabRight";
	#num=#num+1;
	$root[#num]="J)タブを左に移動";
	$label[#num]="MoveTabLeft";
	#num=#num+1;
	$root[#num]="F)タブをファイル名で並び替える";
	$label[#num]="TabSortFilename";
	#num=#num+1;
	$root[#num]="E)タブをファイル拡張子で並び替える";
	$label[#num]="TabSortExtension";
	#num=#num+1;
	
	$root[#num]="\x01";
	$label[#num]="";
	#num=#num+1;

	//-------------------------------------------------
	//	閉じる
	//-------------------------------------------------
	$root[#num]="このタブ以外を閉じる";
	$label[#num]="CloseOtherTab";
	#num=#num+1;
	$root[#num]="左のタブをすべて閉じる";
	$label[#num]="CloseLeftTabAll";
	#num=#num+1;
	$root[#num]="右のタブをすべて閉じる";
	$label[#num]="CloseRightTabAll";
	#num=#num+1;

	$root[#num]="\x01";
	$label[#num]="";
	#num=#num+1;
	
	$root[#num]="G)Grepを閉じる";
	$label[#num]="CloseGrep";
	#num=#num+1;
	$root[#num]="X)タブグループを閉じる";
	$label[#num]="CloseTabGroup";
	#num=#num+1;
	
	$root[#num]="Q)このタブを閉じる";
	$label[#num]="Quit";
	#num=#num+1;
	
	return ;

Main:
	menuarray $root,#num;
	if(result==0){
		return;
	}
	##index=result-1;
	$$name=$label[##index];
	if ($$name==""){
		return ;
	}
	call $$name;
	return ;

New:
	newfile;
	return;

Open:
	openfile "*.*";
	return;

Quit:
	exit;
	return;

CloseGrep:
	execmacro currentmacrodirectory+"\\CloseGrepWin.mac";
	return;

CloseTabGroup:
	execmacro currentmacrodirectory+"\\close_tab_group.mac";
	return ;
	
Write:
	save;
	return;	

WriteClose:
	saveexit;
	return;
	
CloseOtherTab:
	##i = tabtotal - 1;
	while( 0 <= ##i ) {
		##handle = gettabhandle( true, 0, ##i );
		if( ##handle == hidemaruhandle(0) ) {
			//自分自身
		} else {
			if( updated[##handle] ) {
				//message filename2[##handle] + "更新されています。";
			}else{
				closehidemaru ##handle;
			}
		}
		##i = ##i - 1;
	}
	return ;

CloseLeftTabAll:
	##i=0;
	while(true){
		##handle = gettabhandle( true, 0, ##i );
		if( ##handle == hidemaruhandle(0) ) {
			//自分自身
			return;
		} else {
			if( updated[##handle] ) {
			  //message filename2[##handle] + "更新されています。";
			  ##i = ##i + 1;
			} else {
			  closehidemaru ##handle;
			}
		}
	}
	return;

CloseRightTabAll:
	##i=tabtotal - 1;
	while(0 <= ##i){
		##handle = gettabhandle( true, 0, ##i );
		if( ##handle == hidemaruhandle(0) ) {
			//自分自身
			return;
		} else {
			if( updated[##handle] ) {
			  //message filename2[##handle] + "更新されています。";
			} else {
			  closehidemaru ##handle;
			}
		}
		##i = ##i - 1;
	}
	return ;
	
DetachOrMoveTab:
	settabgroup;
	return ;

DetachTab:
	settabgroup;
	return ;

GroupingProject:
	return ;

GroupingFolder:
	execmacro currentmacrodirectory+"\\grouping_tab_folder.mac";
	return;

GroupingBasename:
	execmacro currentmacrodirectory+"\\grouping_tab_basename.mac";
	return;
	
GroupingExtension:
	execmacro currentmacrodirectory+"\\grouping_tab_extension.mac";
	return;
	
MoveTabRight:
	execmacro currentmacrodirectory+"\\settaborder_right.mac";
	return ;

MoveTabLeft:
	execmacro currentmacrodirectory+"\\settaborder_left.mac";
	return ;

MoveTabBoth:
	title "[Mode]タブの移動(Left/Right/H/L)";
	while(1){
		##in=inputchar("");
		if ((##in == 0x1C) || (##in==ascii("h"))){
			execmacro currentmacrodirectory+"\\settaborder_left.mac";
			continue;
		}
		if ((##in == 0x1E) || (##in==ascii("l"))){
			execmacro currentmacrodirectory+"\\settaborder_right.mac";
			continue;
		}
		break;
	}
	return;

TabSortFilename:
	execmacro currentmacrodirectory+"\\cmd_sort_tab_filename.mac";
	return;
	
TabSortExtension:
	execmacro currentmacrodirectory+"\\cmd_sort_tab_ext.mac";
	return;

ForcusTab:
	title "[Mode]タブの移動(Left/Right/H/L)";
	while(1){
		##in=inputchar("");
		if ((##in == 0x1C) || (##in==ascii("h"))){
			prevtab;
			continue;
		}
		if ((##in == 0x1E) || (##in==ascii("l"))){
			nexttab;
			continue;
		}
		break;
	}
	return;
	
MoveRightTab:
	nexttab;
	return;
	
MoveLeftTab:
	prevtab
	return;

Split:
	title "[Mode]分割方向の切り替え(S)";
	if(iskeydown(#K_SHIFT)){
		call SwitchWindowSplitReverse;
	}else{
		call SwitchWindowSplit;
	}
	while(1){
		##in=inputchar("");
		if(##in==ascii("s")){
			call SwitchWindowSplit;
			continue;
		}
		if(##in==ascii("S")){
			call SwitchWindowSplitReverse;
			continue;
		}
		break;
	}
	return;
	
SplitHorizontal:
	split 1,1;
	return;

SplitVertical:
	split 2,1;
	return;

SplitClose:
	if(splitmode==0){
		//分割無し
		return;
	}
	split 0,0;
	return;
	
SwitchWindowSplit:
	if(splitmode==0){
		//分割無し→上下分割
		split 1;
		return;
	}
	if(splitmode==1){
		//上下分割→左右分割
		split 2;
		return;
	}
	if(splitmode==2){
		//左右分割→分割無し
		split 2;
		return;
	}
	if(splitmode==3){
		//V7.xx以前の旧式の分割
		//どの様な分割方法なのか分からないのでとりあえず無視する。
		return;
	}
	return;


SwitchWindowSplitReverse:
	if(splitmode==0){
		//分割無し→左右分割
		split 2;
		return;
	}
	if(splitmode==1){
		//上下分割→分割なし
		split 1;
		return;
	}
	if(splitmode==2){
		//左右分割→上下分割
		split 1;
		return;
	}
	if(splitmode==3){
		//V7.xx以前の旧式の分割
		//どの様な分割方法なのか分からないのでとりあえず無視する。
		return;
	}
	return;
	
	
SplitSwitch:
	splitswitch;
	return;